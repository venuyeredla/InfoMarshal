package org.vgr.app.service;

import java.io.File;
import java.util.List;

import org.vgr.app.dao.ProfileDao;
import org.vgr.app.domain.Image;
import org.vgr.app.domain.Profile;
import org.vgr.app.exceptions.CustomDirectoryExcption;
import org.vgr.ioc.annot.Inject;
import org.vgr.ioc.annot.Service;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Service(id="profileService")
public class ProfileService {
  private static Logger logger=LoggerFactory.getLogger(ProfileService.class);
	
  @Inject(ref="profileDao")
  private ProfileDao profileDao=null;
  @Inject(value="/home/venugopal/Documents/Java/WorkSpace/Static")
  private String basePath=null;
	
	public Profile createProfile(Profile profile){
		int autoGeneratedKey=0;
		profile.setActiveInd('Y');
		profile.setHomeurl(profile.getFirstName().toLowerCase()+"_"+profile.getLastName().toLowerCase());
	    autoGeneratedKey=profileDao.saveProfile(profile);
	     if(autoGeneratedKey!=0){
	    	 profile.setUserId(autoGeneratedKey);
		     profileDao.saveProfileDetails(profile);
		     try {
				this.createProfileDir(autoGeneratedKey);
			} catch (CustomDirectoryExcption e) {
				System.out.println(e+ "directory exception handled");
				e.printStackTrace();
			}
	     }
		
		return profile;
	}
  /**
   * for creating userdirectory in filesystem	
   * @param userid
   */
	private void createProfileDir(int userid)  throws CustomDirectoryExcption
	{
		File file = new File(basePath+File.separator+userid);
			if (!file.exists()) {
				if (file.mkdir()) {
					System.out.println("Directory is created!");
				} else {
				    logger.warn("you must handled exeption");
					new CustomDirectoryExcption("Directory  not created To this particular user");
				}
			}
			
		System.out.println("remaining code execute ");
		logger.info("file directory handled through info");
		logger.trace("trace file" +file);
		
	}
	
   public void updateImg(int userId,String img){
    	
	   profileDao.updateImg(userId, img);
    	
    }
	
	public int isValidMail(String mail){
	    return	profileDao.emailCount(mail);
	}
	
	
	public  List<Image> getImages(int userid){
		
	     return	profileDao.getImageList(userid);
	}
	
	public ProfileDao getProfileDao() {
		return profileDao;
	}

	public void setProfileDao(ProfileDao profileDao) {
		this.profileDao = profileDao;
	}
	public String getBasePath() {
		return basePath;
	}
	public void setBasePath(String basePath) {
		this.basePath = basePath;
	}
	
}
